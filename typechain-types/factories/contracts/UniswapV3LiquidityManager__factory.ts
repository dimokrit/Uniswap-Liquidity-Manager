/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  UniswapV3LiquidityManager,
  UniswapV3LiquidityManagerInterface,
} from "../../contracts/UniswapV3LiquidityManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "_positionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "lowerTick",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "upperTick",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "LiqAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0Desired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Desired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "desiredWidth",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "desiredWidth",
        type: "uint256",
      },
    ],
    name: "calculatePriceRange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "calculateSqrtPriceX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "price",
        type: "uint160",
      },
    ],
    name: "calculateTick",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "sqrt",
    outputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516114b83803806114b883398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61141a61009e6000398061040d528061051e52806108335280610977525061141a6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806314cb1b13146100675780631ece366a14610090578063677342ce146100a557806374cd42b9146100c557806376d1425c146100e5578063791b98bc14610106575b600080fd5b61007a610075366004611083565b61010e565b6040516100879190611254565b60405180910390f35b6100a361009e36600461102f565b610123565b005b6100b86100b336600461119a565b6108e0565b60405161008791906113a6565b6100d86100d336600461109f565b610917565b6040516100879190611268565b6100f86100f336600461114c565b610923565b6040516100879291906113af565b61007a610975565b60008061011a83610999565b9150505b919050565b6001600160a01b0384166101525760405162461bcd60e51b8152600401610149906112ca565b60405180910390fd5b600081118015610163575061271081105b61017f5760405162461bcd60e51b815260040161014990611276565b836001600160a01b0381166101a65760405162461bcd60e51b81526004016101499061129d565b806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156101df57600080fd5b505afa1580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610217919061100c565b6001600160a01b03166323b872dd3330876040518463ffffffff1660e01b815260040161024693929190611217565b602060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190611069565b50806001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156102d257600080fd5b505afa1580156102e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030a919061100c565b6001600160a01b03166323b872dd3330866040518463ffffffff1660e01b815260040161033993929190611217565b602060405180830381600087803b15801561035357600080fd5b505af1158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b9190611069565b50806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c557600080fd5b505afa1580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd919061100c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000866040518363ffffffff1660e01b815260040161044a92919061123b565b602060405180830381600087803b15801561046457600080fd5b505af1158015610478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049c9190611069565b50806001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d657600080fd5b505afa1580156104ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050e919061100c565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000856040518363ffffffff1660e01b815260040161055b92919061123b565b602060405180830381600087803b15801561057557600080fd5b505af1158015610589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ad9190611069565b506000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156105e957600080fd5b505afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062191906110bb565b50505050505090506000806106368386610923565b915091506000610651606061064a856108e0565b901b610ccb565b90506000610663606061064a856108e0565b90506000604051806101600160405280886001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ac57600080fd5b505afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e4919061100c565b6001600160a01b03168152602001886001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561072b57600080fd5b505afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610763919061100c565b6001600160a01b03168152602001886001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b1580156107aa57600080fd5b505afa1580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e29190611177565b62ffffff1681526020018460020b81526020018360020b81526020018b81526020018a81526020016000815260200160008152602001336001600160a01b03168152602001426102580181525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166388316456826040518263ffffffff1660e01b815260040161087d91906112f8565b608060405180830381600087803b15801561089757600080fd5b505af11580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf91906111b2565b505050505050505050505050505050565b80600260018201045b818110156109115780915060028182858161090057fe5b04018161090957fe5b0490506108e9565b50919050565b60008061011a83610ccb565b600080806002600160601b6001600160a01b038716046001600160a01b03160a6001600160a01b0316905060006127108583028161095d57fe5b04820396612710958302959095049091019450505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008360020b126109b0578260020b6109b8565b8260020b6000035b9050620d89e88111156109f6576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216610a0a57600160801b610a1c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610a50576ffff97272373d413259a46990580e213a0260801c5b6004821615610a6f576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610a8e576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610aad576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610acc576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610aeb576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610b0a576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610b2a576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610b4a576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610b6a576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610b8a576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610baa576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610bca576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610bea576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610c0a576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610c2b576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610c4b576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610c6a576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610c87576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610ca2578060001981610c9e57fe5b0490505b640100000000810615610cb6576001610cb9565b60005b60ff16602082901c0192505050919050565b60006401000276a36001600160a01b03831610801590610d07575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b610d3c576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110610dd057607f810383901c9150610dda565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14610fdb57886001600160a01b0316610fbf82610999565b6001600160a01b03161115610fd45781610fd6565b805b610fdd565b815b9998505050505050505050565b8051801515811461011e57600080fd5b805161ffff8116811461011e57600080fd5b60006020828403121561101d578081fd5b8151611028816113bd565b9392505050565b60008060008060808587031215611044578283fd5b843561104f816113bd565b966020860135965060408601359560600135945092505050565b60006020828403121561107a578081fd5b61102882610fea565b600060208284031215611094578081fd5b8135611028816113d5565b6000602082840312156110b0578081fd5b8135611028816113bd565b600080600080600080600060e0888a0312156110d5578283fd5b87516110e0816113bd565b60208901519097506110f1816113d5565b95506110ff60408901610ffa565b945061110d60608901610ffa565b935061111b60808901610ffa565b925060a088015160ff81168114611130578283fd5b915061113e60c08901610fea565b905092959891949750929550565b6000806040838503121561115e578182fd5b8235611169816113bd565b946020939093013593505050565b600060208284031215611188578081fd5b815162ffffff81168114611028578182fd5b6000602082840312156111ab578081fd5b5035919050565b600080600080608085870312156111c7578384fd5b8451935060208501516001600160801b03811681146111e4578384fd5b6040860151606090960151949790965092505050565b6001600160a01b03169052565b60020b9052565b62ffffff169052565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0391909116815260200190565b60029190910b815260200190565b6020808252600d908201526c092dcecc2d8d2c840eed2c8e8d609b1b604082015260600190565b602080825260139082015272141bdbdb08191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b602080825260149082015273496e76616c696420706f6f6c206164647265737360601b604082015260600190565b60006101608201905061130c8284516111fa565b602083015161131e60208401826111fa565b506040830151611331604084018261120e565b5060608301516113446060840182611207565b5060808301516113576080840182611207565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151611395828501826111fa565b505061014092830151919092015290565b90815260200190565b918252602082015260400190565b6001600160a01b03811681146113d257600080fd5b50565b8060020b81146113d257600080fdfea2646970667358221220e8f7b913f9b3e54194db7eeaa570a53de2c8742d0fd659a7da8a31b88f0b369864736f6c63430007060033";

type UniswapV3LiquidityManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3LiquidityManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3LiquidityManager__factory extends ContractFactory {
  constructor(...args: UniswapV3LiquidityManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _positionManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_positionManager, overrides || {});
  }
  override deploy(
    _positionManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_positionManager, overrides || {}) as Promise<
      UniswapV3LiquidityManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UniswapV3LiquidityManager__factory {
    return super.connect(runner) as UniswapV3LiquidityManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3LiquidityManagerInterface {
    return new Interface(_abi) as UniswapV3LiquidityManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapV3LiquidityManager {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UniswapV3LiquidityManager;
  }
}
